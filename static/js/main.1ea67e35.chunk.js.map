{"version":3,"sources":["containers/items/actionTypes.js","containers/items/actionCreators.js","components/layouts/Header.jsx","components/items/ItemAction.jsx","components/items/Item.jsx","components/items/Items.jsx","containers/items/ItemList.js","App.js","serviceWorker.js","containers/items/actions.js","containers/items/reducer.js","reducers.js","store.js","index.js"],"names":["actionTypes","actionCreators","getItemList","payload","type","addQuantity","Header","_ref","title","react_default","a","createElement","className","ItemAction","props","item","onClick","id","disabled","max_stock","added","Item","description","items_ItemAction","Object","assign","stock","price","toFixed","Items","list","map","items_Item","key","ItemList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","layouts_Header","items_Items","items","Component","connectedComp","connect","dispatch","bindActionCreators","App","items_ItemList","Boolean","window","location","hostname","match","actions","objectSpread","console","log","_list","INITIAL_STATE","image","tax","summary","quantity","discount","delivery","subTotal","total","itemsReduce","arguments","length","undefined","rootReducers","combineReducers","logger","createLogger","store","createStore","reducers","applyMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ea67e35.chunk.js","sourcesContent":["const GET_ITEM_LIST = \"GET_ITEM_LIST\";\r\nconst ADD_QUANTITY = \"ADD_QUANTITY\";\r\nconst REMOVE_QUANTITY = \"REMOVE_QUANTITY\";\r\nconst GET_SIZE_LIST = \"GET_SIZE_LIST\";\r\nconst CALCULATE_TOTAL = \"CALCULATE_TOTAL\";\r\n\r\nexport default {\r\n  GET_ITEM_LIST,\r\n  ADD_QUANTITY,\r\n  REMOVE_QUANTITY,\r\n  GET_SIZE_LIST,\r\n  CALCULATE_TOTAL\r\n};\r\n","import actionTypes from \"./actionTypes\";\r\n\r\nconst getItemList = payload => {\r\n  return {\r\n    type: actionTypes.GET_ITEM_LIST,\r\n    payload: payload\r\n  };\r\n};\r\n\r\nconst addQuantity = payload => {\r\n  return {\r\n    type: actionTypes.ADD_QUANTITY,\r\n    payload: payload\r\n  };\r\n};\r\n\r\nexport default {\r\n  getItemList,\r\n  addQuantity\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ title }) => (\r\n  <div className=\"bg-dark p-3 text-center\">\r\n    <span className=\"text-white h3\">{title}</span>\r\n  </div>\r\n);\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst ItemAction = props => {\r\n  const { item, addQuantity } = props;\r\n  return (\r\n    <div className=\"btn-group\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        onClick={() => addQuantity(item.id)}\r\n        disabled={item.max_stock}\r\n      >\r\n        +\r\n      </button>\r\n      <button type=\"button\" className=\"btn btn-default\" disabled>\r\n        {item.added}\r\n      </button>\r\n      <button type=\"button\" className=\"btn btn-secondary\">\r\n        -\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemAction;\r\n","import React from \"react\";\r\nimport ItemAction from \"./ItemAction\";\r\n\r\nconst Item = props => {\r\n  const { item } = props;\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <b className=\"label-title\">{item.title}</b>\r\n        <p className=\"label-description\">{item.description}</p>\r\n      </td>\r\n      <td>\r\n        <ItemAction item={item} {...props} />\r\n      </td>\r\n      <td className=\"text-center\">{item.stock}</td>\r\n      <td>${item.price.toFixed(2)}</td>\r\n      <td>\r\n        <button type=\"button\" className=\"btn btn-danger btn-sm\">\r\n          Remove\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\nimport \"./items.css\";\r\n\r\nconst Items = props => {\r\n  const { list } = props;\r\n  return (\r\n    <table className=\"table table-strip\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th>Description</th>\r\n          <th>Quantity</th>\r\n          <th>Stock</th>\r\n          <th>Price</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {list.map(item => (\r\n          <Item key={item.id} item={item} {...props} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport actionCreators from \"./actionCreators\";\r\n\r\nimport { Header } from \"../../components/layouts\";\r\nimport { Items } from \"../../components/items\";\r\n\r\nclass ItemList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"My Shopping Cart\"\r\n    };\r\n\r\n    this.addQuantity = this.addQuantity.bind(this);\r\n  }\r\n\r\n  addQuantity(id) {\r\n    this.props.addQuantity(id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header title={this.state.title} />\r\n        <div className=\"container mt-2\">\r\n          <Items list={this.props.items.list} addQuantity={this.addQuantity} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.items\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(actionCreators, dispatch);\r\n};\r\n\r\nconst connectedComp = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ItemList);\r\n\r\nexport default connectedComp;\r\n","import React, { Component } from \"react\";\r\nimport ItemList from \"./containers/items/ItemList\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return <ItemList />;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const getItemList = state => {\r\n  return {\r\n    ...state,\r\n    items: state.items\r\n  };\r\n};\r\n\r\nconst addQuantity = (state, payload) => {\r\n  console.log(state);\r\n  const _list = state.list.map(item => {\r\n    if (item.id === payload) {\r\n      if (item.added < item.stock) {\r\n        item.added = item.added + 1;\r\n        item.max_stock = false;\r\n      } else {\r\n        item.max_stock = true;\r\n      }\r\n    }\r\n    return item;\r\n  });\r\n  return {\r\n    ...state,\r\n    items: {\r\n      ...state.items,\r\n      list: _list\r\n    }\r\n  };\r\n};\r\n\r\nexport default {\r\n  getItemList,\r\n  addQuantity\r\n};\r\n","import actionTypes from \"./actionTypes\";\r\nimport actions from \"./actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  list: [\r\n    {\r\n      id: 1,\r\n      title: \"Solid State Drive\",\r\n      description:\r\n        \"SAMSUNG 860 EVO Series 2.5 500GB Solid State Drive (SSD) MZ-76E500B/AM\",\r\n      image: \"ssd_samsung.jpg\",\r\n      price: 79.99,\r\n      stock: 3,\r\n      max_stock: false,\r\n      tax: 10,\r\n      added: 0\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Cooler\",\r\n      description:\r\n        \"Cooler Master Hyper 212 EVO - CPU Cooler with 120mm PWM Fan\",\r\n      image: \"cooler.jpg\",\r\n      price: 34.99,\r\n      stock: 5,\r\n      tax: 10,\r\n      added: 0\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Processor Intel\",\r\n      description:\r\n        \"Intel Core i9-9900K Coffee Lake 8-Core, 16-Thread, 3.6 GHz (5.0 GHz Turbo) LGA 1151 (300 Series)\",\r\n      image: \"cooler.jpg\",\r\n      price: 494.99,\r\n      stock: 2,\r\n      tax: 10,\r\n      added: 0\r\n    }\r\n  ],\r\n  summary: {\r\n    quantity: 1,\r\n    discount: 0,\r\n    delivery: 0,\r\n    subTotal: 0,\r\n    total: 0\r\n  }\r\n};\r\nconst itemsReduce = (state = INITIAL_STATE, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.GET_ITEM_LIST:\r\n      return actions.getItemList(state);\r\n    case actionTypes.ADD_QUANTITY:\r\n      return actions.addQuantity(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReduce;\r\n","import { combineReducers } from \"redux\";\r\nimport itemsReduce from \"./containers/items/reducer\";\r\n\r\n//merge reducers object\r\nconst rootReducers = combineReducers({\r\n  items: itemsReduce\r\n});\r\n\r\nexport default rootReducers;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport reducers from \"./reducers\";\r\n\r\n//create redux-logger\r\nconst logger = createLogger();\r\n\r\nconst store = createStore(reducers, applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}